Using device: cuda
CUDA available: True
Loading light curves...
finished getting all files
Loaded 10 light curves
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/torch/nn/modules/transformer.py:502: UserWarning: The PyTorch API of nested tensors is in prototype stage and will change in the near future. (Triggered internally at /opt/conda/conda-bld/pytorch_1729647429097/work/aten/src/ATen/NestedTensorImpl.cpp:178.)
  output = torch._nested_tensor_from_mask(
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
Epoch 0, Train Loss: 3927048715113594880.0000, Validation Loss: nan
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.4309e+08, 6.4311e+08, 6.4312e+08, 6.4313e+08, 6.4315e+08])
tensor([1.0000e+00, 6.4004e+08, 6.4005e+08, 6.4007e+08, 6.4008e+08, 6.4009e+08,
        6.4011e+08, 6.4012e+08, 6.4014e+08, 6.4015e+08, 6.4017e+08, 6.4018e+08,
        6.4020e+08, 6.4021e+08, 6.4022e+08, 6.4024e+08, 6.4025e+08, 6.4027e+08,
        6.4028e+08, 6.4030e+08])
tensor([1.0000e+00, 6.3278e+08, 6.3279e+08, 6.3280e+08, 6.3282e+08, 6.3283e+08,
        6.3285e+08, 6.3286e+08, 6.3288e+08, 6.3289e+08, 6.3290e+08, 6.3292e+08,
        6.3293e+08, 6.3295e+08, 6.3296e+08, 6.3298e+08, 6.3299e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
tensor([1.0000e+00, 6.2967e+08, 6.2969e+08, 6.2970e+08, 6.2972e+08, 6.2973e+08])
tensor([1.0000e+00, 6.3812e+08, 6.3813e+08, 6.3815e+08, 6.3816e+08, 6.3818e+08,
        6.3819e+08, 6.3821e+08])
tensor([1.0000e+00, 6.3072e+08, 6.3074e+08, 6.3075e+08, 6.3077e+08, 6.3078e+08,
        6.3080e+08, 6.3081e+08])
tensor([1.0000e+00, 6.3426e+08, 6.3428e+08, 6.3429e+08, 6.3431e+08, 6.3432e+08,
        6.3433e+08, 6.3435e+08, 6.3436e+08, 6.3438e+08, 6.3439e+08, 6.3441e+08,
        6.3442e+08, 6.3444e+08, 6.3445e+08, 6.3446e+08, 6.3448e+08, 6.3449e+08,
        6.3451e+08, 6.3452e+08])
tensor([1.0000e+00, 6.3308e+08, 6.3309e+08, 6.3311e+08, 6.3312e+08, 6.3314e+08,
        6.3315e+08, 6.3317e+08, 6.3318e+08, 6.3319e+08])
Traceback (most recent call last):
  File "/orcd/home/002/pdong/Astro UROP/trans_model.py", line 548, in <module>
    wandb.log({"Reconstruction": wandb.Image(fig)})
                                 ^^^^^^^^^^^^^^^^
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/wandb/sdk/data_types/image.py", line 179, in __init__
    self._initialize_from_data(data_or_path, mode, file_type)
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/wandb/sdk/data_types/image.py", line 302, in _initialize_from_data
    util.ensure_matplotlib_figure(data).savefig(buf, format="png")
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/figure.py", line 3490, in savefig
    self.canvas.print_figure(fname, **kwargs)
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/backend_bases.py", line 2184, in print_figure
    result = print_method(
             ^^^^^^^^^^^^^
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/backend_bases.py", line 2040, in <lambda>
    print_method = functools.wraps(meth)(lambda *args, **kwargs: meth(
                                                                 ^^^^^
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/backends/backend_agg.py", line 481, in print_png
    self._print_pil(filename_or_obj, "png", pil_kwargs, metadata)
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/backends/backend_agg.py", line 429, in _print_pil
    FigureCanvasAgg.draw(self)
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/backends/backend_agg.py", line 382, in draw
    self.figure.draw(self.renderer)
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/artist.py", line 94, in draw_wrapper
    result = draw(artist, renderer, *args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/artist.py", line 71, in draw_wrapper
    return draw(artist, renderer)
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/figure.py", line 3257, in draw
    mimage._draw_list_compositing_images(
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/image.py", line 134, in _draw_list_compositing_images
    a.draw(renderer)
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/artist.py", line 71, in draw_wrapper
    return draw(artist, renderer)
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/axes/_base.py", line 3145, in draw
    self._update_title_position(renderer)
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/axes/_base.py", line 3089, in _update_title_position
    ax.yaxis.get_tightbbox(renderer)  # update offsetText
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/axis.py", line 1362, in get_tightbbox
    ticks_to_draw = self._update_ticks()
                    ^^^^^^^^^^^^^^^^^^^^
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/axis.py", line 1294, in _update_ticks
    major_ticks = self.get_major_ticks(len(major_locs))
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/axis.py", line 1675, in get_major_ticks
    tick = self._get_tick(major=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/axis.py", line 1603, in _get_tick
    return self._tick_class(self.axes, 0, major=major, **tick_kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/axis.py", line 429, in __init__
    super().__init__(*args, **kwargs)
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/axis.py", line 159, in __init__
    self.tick2line = mlines.Line2D(
                     ^^^^^^^^^^^^^^
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/lines.py", line 407, in __init__
    self._internal_update(kwargs)
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/artist.py", line 1233, in _internal_update
    return self._update_props(
           ^^^^^^^^^^^^^^^^^^^
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/artist.py", line 1209, in _update_props
    ret.append(func(v))
               ^^^^^^^
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/artist.py", line 1065, in set_visible
    self.pchanged()
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/artist.py", line 425, in pchanged
    self._callbacks.process("pchanged")
  File "/home/pdong/.conda/envs/myenv/lib/python3.11/site-packages/matplotlib/cbook.py", line 357, in process
    for ref in list(self.callbacks.get(s, {}).values()):
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
